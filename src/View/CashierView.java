package View;

import Model.LoginModel;
import Controller.LoginController;
import Database.DatabaseConnector;
import static Invoice.InvoiceGenerator.generateInvoice;
import com.google.zxing.WriterException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

public class CashierView extends javax.swing.JFrame {

//    private CashierController controller;
//
//    public void setController(CashierController controller) {
//        this.controller = controller;
//    }
    private double total = 0.0; //encapsulated field
    private final DefaultTableModel dataModelInvoice;

    /**
     * Creates new form Cashier
     */
    public CashierView() {
        initComponents();
        dataModelInvoice = new DefaultTableModel(new String[]{"ItemID", "Name", "Category", "Qty", "Price"}, 0);
        tblInv.setModel(dataModelInvoice);

        startClock();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBG = new javax.swing.JPanel();
        pnlFooter = new javax.swing.JPanel();
        lblFooter = new javax.swing.JLabel();
        pnlInvoice = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInv = new javax.swing.JTable();
        lblInvoice = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblTotal = new javax.swing.JLabel();
        txtTot = new javax.swing.JTextField();
        lblPay = new javax.swing.JLabel();
        txtPay = new javax.swing.JTextField();
        lblPayErr = new javax.swing.JLabel();
        lblBal = new javax.swing.JLabel();
        txtBal = new javax.swing.JTextField();
        btnCal = new javax.swing.JButton();
        btnPay = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        sepMakePay = new javax.swing.JSeparator();
        btnClearInv = new javax.swing.JButton();
        pnlProducts = new javax.swing.JPanel();
        btnLogin = new javax.swing.JButton();
        btnRef = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPro = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        lblProducts = new javax.swing.JLabel();
        spnQty = new javax.swing.JSpinner();
        lblQty = new javax.swing.JLabel();
        lblSearch = new javax.swing.JLabel();
        pnlHeader = new javax.swing.JPanel();
        lblHeader = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Apple iStore - Cashier Dashboard");
        setResizable(false);

        pnlBG.setBackground(new java.awt.Color(0, 0, 51));

        pnlFooter.setBackground(new java.awt.Color(0, 102, 204));

        lblFooter.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblFooter.setForeground(new java.awt.Color(255, 255, 255));
        lblFooter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/apple (2).png"))); // NOI18N
        lblFooter.setText("Apple Technologies USA");

        javax.swing.GroupLayout pnlFooterLayout = new javax.swing.GroupLayout(pnlFooter);
        pnlFooter.setLayout(pnlFooterLayout);
        pnlFooterLayout.setHorizontalGroup(
            pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFooterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFooter)
                .addGap(365, 365, 365))
        );
        pnlFooterLayout.setVerticalGroup(
            pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFooterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFooter)
                .addContainerGap())
        );

        pnlInvoice.setBackground(new java.awt.Color(51, 153, 255));

        tblInv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemID", "Name", "Category", "Quantity", "Price($)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane2.setViewportView(tblInv);

        lblInvoice.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblInvoice.setForeground(new java.awt.Color(204, 255, 255));
        lblInvoice.setText("Invoice Details Table :");

        btnExit.setBackground(new java.awt.Color(51, 153, 255));
        btnExit.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/button.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.setBorder(null);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnRemove.setBackground(new java.awt.Color(51, 153, 255));
        btnRemove.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/remove.png"))); // NOI18N
        btnRemove.setText("Remove From Invoice");
        btnRemove.setBorder(null);
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));

        lblTotal.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(255, 255, 255));
        lblTotal.setText("Total ($) :");

        txtTot.setEditable(false);
        txtTot.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtTot.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblPay.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblPay.setForeground(new java.awt.Color(255, 255, 255));
        lblPay.setText("Payment ($) :");

        txtPay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtPay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPayKeyPressed(evt);
            }
        });

        lblPayErr.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblPayErr.setForeground(new java.awt.Color(204, 255, 255));

        lblBal.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblBal.setForeground(new java.awt.Color(255, 255, 255));
        lblBal.setText("Balance ($) :");

        txtBal.setEditable(false);
        txtBal.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnCal.setBackground(new java.awt.Color(0, 102, 255));
        btnCal.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        btnCal.setForeground(new java.awt.Color(255, 255, 255));
        btnCal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/calculator.png"))); // NOI18N
        btnCal.setText("Calculate Balance");
        btnCal.setBorder(null);
        btnCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalActionPerformed(evt);
            }
        });

        btnPay.setBackground(new java.awt.Color(0, 102, 255));
        btnPay.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        btnPay.setForeground(new java.awt.Color(255, 255, 255));
        btnPay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/credit-card.png"))); // NOI18N
        btnPay.setText("Pay & Print");
        btnPay.setBorder(null);
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 17)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Make The Payment");

        sepMakePay.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnCal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPay, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sepMakePay, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblPay)
                                            .addComponent(lblTotal))
                                        .addGap(17, 17, 17))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblBal)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblPayErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPay)
                                    .addComponent(txtTot)
                                    .addComponent(txtBal, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(77, 77, 77))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sepMakePay, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPay))
                .addGap(9, 9, 9)
                .addComponent(lblPayErr, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBal))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPay)
                    .addComponent(btnCal))
                .addGap(15, 15, 15))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCal, btnPay});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblPayErr, txtPay});

        btnClearInv.setBackground(new java.awt.Color(51, 153, 255));
        btnClearInv.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        btnClearInv.setForeground(new java.awt.Color(255, 255, 255));
        btnClearInv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/clear-format.png"))); // NOI18N
        btnClearInv.setText("Clear Invoice");
        btnClearInv.setBorder(null);
        btnClearInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearInvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInvoiceLayout = new javax.swing.GroupLayout(pnlInvoice);
        pnlInvoice.setLayout(pnlInvoiceLayout);
        pnlInvoiceLayout.setHorizontalGroup(
            pnlInvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInvoiceLayout.createSequentialGroup()
                .addGroup(pnlInvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInvoiceLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClearInv)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(156, 156, 156))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInvoiceLayout.createSequentialGroup()
                        .addGroup(pnlInvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInvoice)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        pnlInvoiceLayout.setVerticalGroup(
            pnlInvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInvoiceLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(pnlInvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlInvoiceLayout.createSequentialGroup()
                        .addComponent(lblInvoice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlInvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnExit)
                            .addComponent(btnRemove)
                            .addComponent(btnClearInv)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pnlProducts.setBackground(new java.awt.Color(102, 153, 255));

        btnLogin.setBackground(new java.awt.Color(102, 153, 255));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/previous.png"))); // NOI18N
        btnLogin.setText("Back to Login");
        btnLogin.setBorder(null);
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnRef.setBackground(new java.awt.Color(102, 153, 255));
        btnRef.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnRef.setForeground(new java.awt.Color(255, 255, 255));
        btnRef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/loading-arrow.png"))); // NOI18N
        btnRef.setText("Refresh");
        btnRef.setBorder(null);
        btnRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefActionPerformed(evt);
            }
        });

        txtSearch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnSearch.setBackground(new java.awt.Color(102, 153, 255));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/search.png"))); // NOI18N
        btnSearch.setBorder(null);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblPro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemID", "Name", "Category", "Quantity", "Price($)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(tblPro);

        btnView.setBackground(new java.awt.Color(102, 153, 255));
        btnView.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/file.png"))); // NOI18N
        btnView.setText("View Products");
        btnView.setBorder(null);
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(102, 153, 255));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/add.png"))); // NOI18N
        btnAdd.setText("Add to Invoice");
        btnAdd.setBorder(null);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblProducts.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblProducts.setForeground(new java.awt.Color(204, 255, 255));
        lblProducts.setText("Product Details Table :");

        spnQty.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10000, 1));
        spnQty.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblQty.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblQty.setForeground(new java.awt.Color(255, 255, 255));
        lblQty.setText("Select Quantity :");

        lblSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(255, 255, 255));
        lblSearch.setText("Search Products :");

        javax.swing.GroupLayout pnlProductsLayout = new javax.swing.GroupLayout(pnlProducts);
        pnlProducts.setLayout(pnlProductsLayout);
        pnlProductsLayout.setHorizontalGroup(
            pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductsLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProductsLayout.createSequentialGroup()
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRef, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(pnlProductsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlProductsLayout.createSequentialGroup()
                                .addComponent(lblQty)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spnQty, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlProductsLayout.createSequentialGroup()
                                .addComponent(lblProducts)
                                .addGap(719, 719, 719))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(37, Short.MAX_VALUE))))
        );
        pnlProductsLayout.setVerticalGroup(
            pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductsLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch)
                    .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRef)
                        .addComponent(btnLogin)
                        .addComponent(btnView)
                        .addComponent(lblSearch)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblProducts)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(spnQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQty))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlHeader.setBackground(new java.awt.Color(0, 102, 204));
        pnlHeader.setPreferredSize(new java.awt.Dimension(381, 54));

        lblHeader.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(255, 255, 255));
        lblHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/cash-machine.png"))); // NOI18N
        lblHeader.setText("  THE ISTORE - CASHIER DASHBOARD");

        lblTime.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 255, 255));

        lblDate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlBGLayout = new javax.swing.GroupLayout(pnlBG);
        pnlBG.setLayout(pnlBGLayout);
        pnlBGLayout.setHorizontalGroup(
            pnlBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBGLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlInvoice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlProducts, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlHeader, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 945, Short.MAX_VALUE)
                    .addComponent(pnlFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlBGLayout.setVerticalGroup(
            pnlBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBGLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlProducts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getAccessibleContext().setAccessibleName("iStore - Cashier Dashboard");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        LoginView login = new LoginView();
        login.setVisible(true);

        LoginModel loginModel = new LoginModel();

        LoginController logincontroller = new LoginController(login, loginModel);
        logincontroller.initializeController();
        this.dispose();
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefActionPerformed
        CashierView cashier = new CashierView();
        cashier.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRefActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        performSearch();
    }

    private void performSearch() {
        if (txtSearch.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Search Box is Empty!");
        } else {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                try (Connection con = DatabaseConnector.connect()) {
                    String sql = "SELECT * FROM products WHERE name LIKE ? OR itemid LIKE ? OR category LIKE ?";
                    try (PreparedStatement ps = con.prepareStatement(sql)) {
                        ps.setString(1, "%" + txtSearch.getText() + "%");
                        ps.setString(2, "%" + txtSearch.getText() + "%");
                        ps.setString(3, "%" + txtSearch.getText() + "%");

                        ResultSet rs = ps.executeQuery();

                        DefaultTableModel tblModel = (DefaultTableModel) tblPro.getModel();
                        tblModel.setRowCount(0);

                        while (rs.next()) {
                            String id = String.valueOf(rs.getInt("ItemID"));
                            String name = rs.getString("Name");
                            String category = rs.getString("Category");
                            String qty = rs.getString("Qty");
                            String price = rs.getString("Price");

                            String tbData[] = {id, name, category, qty, price};
                            tblModel.addRow(tbData);
                        }
                    }
                }
            } catch (ClassNotFoundException | SQLException e) {

            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    //validation for check item already in invoice
    private boolean isItemInInvoice(String itemID) {
        for (int i = 0; i < tblInv.getRowCount(); i++) {
            String existingItemID = (String) tblInv.getValueAt(i, 0);
            if (itemID.equals(existingItemID)) {
                return true;
            }
        }
        return false;
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int selectedRow = tblPro.getSelectedRow();

        if (selectedRow != -1) {
            try {
                String itemID = (String) tblPro.getValueAt(selectedRow, 0);
                String name = (String) tblPro.getValueAt(selectedRow, 1);
                String category = (String) tblPro.getValueAt(selectedRow, 2);
                String qtyString = (String) tblPro.getValueAt(selectedRow, 3);
                double price = Double.parseDouble((String) tblPro.getValueAt(selectedRow, 4));

                int qtyToAdd = (int) spnQty.getValue();
                int qtyFromTable = Integer.parseInt(qtyString);

                if (qtyToAdd <= qtyFromTable) {
                    if (isItemInInvoice(itemID)) {
                        JOptionPane.showMessageDialog(this, "The Selecting Item is Already Added!");
                    } else {

                        int newQty = qtyFromTable - qtyToAdd;
                        double newprice = (double) (price * qtyToAdd);
                        tblPro.setValueAt(String.valueOf(newQty), selectedRow, 3);
                        dataModelInvoice.addRow(new Object[]{itemID, name, category, String.valueOf(qtyToAdd), newprice});

                        total += (price * qtyToAdd);
                        txtTot.setText(String.valueOf(total));

                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Quantity to add exceeds the available quantity in stock.");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid Quantity Format!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Select A Product First!");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private boolean dataLoaded = false;
    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        if (!dataLoaded) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                try (Connection con = DatabaseConnector.connect()) {
                    Statement st = con.createStatement();
                    String sql = "select * from products";
                    ResultSet rs = st.executeQuery(sql);

                    while (rs.next()) {
                        String id = String.valueOf(rs.getInt("itemid"));
                        String name = rs.getString("name");
                        String category = rs.getString("category");
                        String qty = rs.getString("qty");
                        String price = rs.getString("price");
                        String tbData[] = {id, name, category, qty, price};
                        DefaultTableModel tblModel = (DefaultTableModel) tblPro.getModel();
                        tblModel.addRow(tbData);
                    }
                }
                dataLoaded = true;
            } catch (ClassNotFoundException | SQLException e) {
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Products Are Already Loaded!");
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int selectedRow = tblInv.getSelectedRow();
        if (selectedRow != -1) {
            double price = (double) tblInv.getValueAt(selectedRow, 4);
            dataModelInvoice.removeRow(selectedRow);

            total -= price;//total=total-price
            txtTot.setText(String.valueOf(total));
        } else {
            JOptionPane.showMessageDialog(this, "Please Select A Product!");
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalActionPerformed
        if (txtTot.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Invoice Table is Empty!");
        } else if (txtPay.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please Add the Payment!");
        } else {
            double totalchk = Double.parseDouble(txtTot.getText());
            double paychk = Double.parseDouble(txtPay.getText());
            if (paychk < totalchk) {
                JOptionPane.showMessageDialog(this, "Payment Can't Be Less Value Than Total!\nPlease Enter Higher Value Than Total!");
            } else {
                if (txtPay.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Payment Field is Empty!\nPlease Enter The Payment Value!");
                } else {
                    try {
                        double totalAmount = Double.parseDouble(txtTot.getText());
                        double paymentAmount = Double.parseDouble(txtPay.getText());
                        double balance = totalAmount - paymentAmount;

                        txtBal.setText(String.valueOf(balance));
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "Please Enter Valid Numeric Values!");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnCalActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        if (txtBal.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Before Make Payment,\nCalculate the Balance!");
        } else {

            try {
                //run invoice generate method
                generateInvoice(tblInv, txtTot, txtPay, txtBal);
            } catch (Exception ex) {
                Logger.getLogger(CashierView.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (dataModelInvoice.getRowCount() > 0) {
                try (Connection conn = DatabaseConnector.connect()) {
                    conn.setAutoCommit(false);

                    String insertSalesSQL = "INSERT INTO sales (total, payment, balance) VALUES (?, ?, ?)";
                    try (PreparedStatement insertSalesStatement = conn.prepareStatement(insertSalesSQL, Statement.RETURN_GENERATED_KEYS)) {

                        double totalSaleAmount = 0.0;

                        for (int i = 0; i < dataModelInvoice.getRowCount(); i++) {
                            double price = (double) dataModelInvoice.getValueAt(i, 4);
                            totalSaleAmount += price;
                        }

                        double paymentAmount = Double.parseDouble(txtPay.getText());
                        double balance = totalSaleAmount - paymentAmount;

                        insertSalesStatement.setDouble(1, totalSaleAmount);
                        insertSalesStatement.setDouble(2, paymentAmount);
                        insertSalesStatement.setDouble(3, balance);

                        insertSalesStatement.executeUpdate();

                        try (ResultSet generatedKeys = insertSalesStatement.getGeneratedKeys()) {
                            int salesID = -1;
                            if (generatedKeys.next()) {
                                salesID = generatedKeys.getInt(1);
                            }

                            String insertSaleItemsSQL = "INSERT INTO saleItems (saleID, itemID, quantity, price) VALUES (?, ?, ?, ?)";
                            try (PreparedStatement insertSaleItemsStatement = conn.prepareStatement(insertSaleItemsSQL)) {

                                for (int i = 0; i < dataModelInvoice.getRowCount(); i++) {
                                    String itemID = (String) dataModelInvoice.getValueAt(i, 0);
                                    int quantity = Integer.parseInt((String) dataModelInvoice.getValueAt(i, 3));
                                    double price = (double) dataModelInvoice.getValueAt(i, 4);

                                    insertSaleItemsStatement.setInt(1, salesID);
                                    insertSaleItemsStatement.setString(2, itemID);
                                    insertSaleItemsStatement.setInt(3, quantity);
                                    insertSaleItemsStatement.setDouble(4, price);

                                    insertSaleItemsStatement.executeUpdate();

                                    String updateProductsSQL = "UPDATE products SET qty = qty - ? WHERE itemid = ?";
                                    try (PreparedStatement updateProductsStatement = conn.prepareStatement(updateProductsSQL)) {
                                        updateProductsStatement.setInt(1, quantity);
                                        updateProductsStatement.setString(2, itemID);
                                        updateProductsStatement.executeUpdate();
                                    }
                                }
                            }
                        }
                    }
                    conn.commit();

                    JOptionPane.showMessageDialog(this, "Payment successful!");

                } catch (SQLException | NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Payment unsuccessful! Please check the fields.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "No items in the invoice table. Please add products first!");
            }
        }
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtPayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPayKeyPressed
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_PERIOD) || (c == KeyEvent.VK_DECIMAL)) {
            lblPayErr.setText("");
            txtPay.setEditable(true);
        } else {
            txtPay.setEditable(false);
            lblPayErr.setText("Please Enter Numbers Only!");
        }
    }//GEN-LAST:event_txtPayKeyPressed

    private void clearInvoice() {
        DefaultTableModel model = (DefaultTableModel) tblInv.getModel();
        model.setRowCount(0);
        txtTot.setText("");
        txtPay.setText("");
        txtBal.setText("");
        spnQty.setValue(1);
    }

    private void btnClearInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearInvActionPerformed
        clearInvoice();
    }//GEN-LAST:event_btnClearInvActionPerformed

    private void startClock() {
        Timer timer = new Timer(1000, (ActionEvent e) -> {
            updateDateTime();
        });
        timer.start();
    }

    private void updateDateTime() {

        //set current time
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
        String formattedTime = timeFormat.format(new Date());

        //set current date
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        String formattedDate = dateFormat.format(new Date());

        //show date and time
        lblTime.setText("Time: " + formattedTime);
        lblDate.setText("Date: " + formattedDate);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CashierView().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCal;
    private javax.swing.JButton btnClearInv;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnRef;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBal;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblFooter;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblInvoice;
    private javax.swing.JLabel lblPay;
    private javax.swing.JLabel lblPayErr;
    private javax.swing.JLabel lblProducts;
    private javax.swing.JLabel lblQty;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JPanel pnlBG;
    private javax.swing.JPanel pnlFooter;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlInvoice;
    private javax.swing.JPanel pnlProducts;
    private javax.swing.JSeparator sepMakePay;
    private javax.swing.JSpinner spnQty;
    private javax.swing.JTable tblInv;
    private javax.swing.JTable tblPro;
    private javax.swing.JTextField txtBal;
    private javax.swing.JTextField txtPay;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTot;
    // End of variables declaration//GEN-END:variables
}
